---
generate: /pages/*
---
<script generate>
  var md = require('markdown-it')();
  const path = require("path");
  const fs = require("fs");
  let pages;
  if (!inputs.triggeredBy) {
    pages = getDataFileNames("pages/**/*.md");
  } else {
    pages = [inputs.triggeredBy];
  }

  posts = posts.map((filepath) => {
    const raw = fs.readFileSync(filepath, "utf8");
    const p = path.parse(filepath);
    return {
      path: p.name,
      data: {
        title: "blog post " + p.name,
        html: raw,
      },
    };
  });

  md.use(require('markdown-it-container'), 'spoiler', {

    validate: function(params) {
      return params.trim().match(/^spoiler\s+(.*)$/);
    },

    render: function(tokens, idx) {
      var m = tokens[idx].info.trim().match(/^spoiler\s+(.*)$/);

      if (tokens[idx].nesting === 1) {
        // opening tag
        return '<details><summary>' + md.utils.escapeHtml(m[1]) + '</summary>\n';

      } else {
        // closing tag
        return '</details>\n';
      }
    }
  });

  console.log(md.render('::: spoiler click me\n*content*\n:::\n'));

  resolve({
    generate: posts,
    watchGlobs: ["pages/*.md"],
  });
</script>